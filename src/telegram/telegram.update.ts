import { Command, Ctx, Hears, Start, Update } from 'nestjs-telegraf'
import { Context, Scenes } from 'telegraf'

import { commands } from '../constants/constants'

import { FindVideoData } from './scenes/data/findVideo.data'
import { UploadVideoData } from './scenes/data/uploadVideo.data'
import { TelegramService } from './telegram.service'

@Update()
export class TelegramUpdate {
    constructor(private readonly _telegramService: TelegramService) {}

    @Start()
    async start(@Ctx() ctx: Context): Promise<void> {
        if (ctx.from) {
            const { username, id } = ctx.from
            await this._telegramService.createUser({ username, chat_id: id })
        }
        await ctx.reply(
            `–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å –∏–¥–µ—Ç –≤–∞–∂–Ω–∞—è –ø–µ—Ä–µ–ø–∏—Å–∫–∞ –∏ —Ç–µ–±–µ —Å—Ä–æ—á–Ω–æ –ø–æ–Ω–∞–¥–æ–±–∏–ª—Å—è —Å–º–µ—à–Ω–æ–π –≤–∏–¥–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–±—Ä–∞–∑–∏—Ç —Ç–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, —Ç–æ —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ–±—è`,
        )
        await ctx.replyWithMarkdownV2(
            `–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Ñ—Ä–∞–∑—É, –∫–æ—Ç–æ—Ä–∞—è –∑–≤—É—á–∞–ª–∞ –≤ –≤–∏–¥–æ—Å–µ –∏ –±–æ—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç –≤—Å—é —Å–≤–æ—é –±–∞–∑—É —Ä–∞–¥–∏ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —ç—Ç–æ –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ–±—èüòé`,
            {
                reply_markup: {
                    keyboard: [
                        [
                            { text: '–ü–æ–∏—Å–∫' },
                            { text: '–í—Å–µ –≤–∏–¥–µ–æ' },
                            { text: '–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' },
                        ],
                    ],
                    resize_keyboard: true,
                },
            },
        )
    }

    @Command(commands.upload)
    async uploadVideo(@Ctx() ctx: Scenes.SceneContext): Promise<void> {
        await ctx.scene.enter(UploadVideoData.sceneName)
    }

    @Hears('–ü–æ–∏—Å–∫')
    @Command(commands.video)
    async findVideo(@Ctx() ctx: Scenes.SceneContext): Promise<void> {
        await ctx.scene.enter(FindVideoData.sceneName)
    }

    @Hears('–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
    @Command(commands.favourite)
    async showFavourite(@Ctx() ctx: Scenes.SceneContext): Promise<void> {
        await ctx.scene.enter(commands.favourite)
    }

    @Hears('–í—Å–µ –≤–∏–¥–µ–æ')
    @Command(commands.videos)
    async findVideos(@Ctx() ctx: Scenes.SceneContext): Promise<void> {
        await ctx.scene.enter('find_all_videos')
    }

    @Command('suspect')
    async showSuspects(@Ctx() ctx: Scenes.SceneContext): Promise<void> {
        await ctx.scene.enter('suspect')
    }
}
